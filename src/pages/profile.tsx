import { type NextPage } from "next";
import Head from "next/head";
import {
    Container,
    Flex,
    Heading,
    Table,
    Thead,
    Tbody,
    Tfoot,
    Tr,
    Th,
    Td,
    TableCaption,
    TableContainer, Text, Button, IconButton, useDisclosure, useToast,
} from "@chakra-ui/react";

// COMPONENTS
import {api} from "@/utils/api";
import {BsFillTrashFill} from "react-icons/bs";
import AddBankModal from "@/components/Dashboard/Profile/AddBankModal";

const PRofile: NextPage = () => {

    const {data: profile} = api.auth.me.useQuery()
    const {data: bank, refetch: refetchBank} = api.user.getBankAccounts.useQuery()

    const toast = useToast()

    const {mutate} = api.user.deleteBankAccount.useMutation({
        onSuccess: () => {
            toast({
                title: 'Bank Account Deleted',
                description: 'Your bank account has been deleted successfully',
                status: 'success',
                duration: 5000,
            })
        },
        onError: (error) => {
            toast({
                title: 'Error',
                description: error.message,
                status: 'error',
                duration: 5000,
            })
        }
    })

    const { isOpen, onOpen, onClose } = useDisclosure()

    const handleDelete = async (id: string) => {
       await mutate({id})
    }

    return (
        <>
            <Head>
                <title>Create T3 App</title>
                <meta name="description" content="Generated by create-t3-app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <AddBankModal
                isOpen={isOpen}
                onClose={onClose}
                refetchBank={refetchBank}
            />
            <Container
                maxW={'container.xl'}
                p={'2'}
            >
                <Flex
                    flexDir={'column'}
                    gap={'2rem'}
                >
                    <Heading
                        size={'md'}
                    >
                        Personal Profile
                    </Heading>
                    <Flex
                        w={'full'}
                        gap={'1rem'}
                        wrap={'wrap'}
                    >
                        {
                            ['name', 'email', 'country', 'phno'].map((p, key) => {
                                return (
                                    <Flex
                                        flexDir={'column'}
                                        gap={'5px'}
                                        key={key}
                                    >
                                        <Heading
                                            size={'sm'}
                                            color={'gray.600'}
                                        >
                                            {p}
                                        </Heading>
                                        <Text>
                                            {profile && profile[p]}
                                        </Text>
                                    </Flex>
                                )
                            })
                        }

                    </Flex>
                </Flex>
                <Flex
                    flexDir={'column'}
                    gap={'1rem'}
                    mt={'3rem'}
                >
                    <Flex
                        alignItems={'center'}
                        gap={'1rem'}
                    >
                        <Heading
                            size={'md'}
                        >
                            Bank Accounts
                        </Heading>
                        <Button
                            colorScheme={'primary'}
                            variant={'outline'}
                            size={'sm'}
                            onClick={onOpen}
                        >
                            Add Bank Account
                        </Button>
                    </Flex>
                    <TableContainer>
                        <Table size='sm'>
                            <Thead>
                                <Tr>
                                    <Th>Bank Name</Th>
                                    <Th>Account</Th>
                                    <Th>IFSC</Th>
                                    <Th>Account Name</Th>
                                    <Th>Address</Th>
                                    <Th>Action</Th>
                                </Tr>
                            </Thead>
                            <Tbody>
                                {
                                    bank && bank?.accounts?.map((b) => {
                                        return (
                                            <Tr key={b.id}>
                                                <Td>{b.bank}</Td>
                                                <Td>{b.account}</Td>
                                                <Td>{b.ifsc}</Td>
                                                <Td>{b.name}</Td>
                                                <Td>{b.address}</Td>
                                                <Td>
                                                    <IconButton
                                                        aria-label={'Delete'}
                                                        icon={<BsFillTrashFill />}
                                                        size={'sm'}
                                                        colorScheme={'red'}
                                                        onClick={() => handleDelete(b.id)}
                                                    />
                                                </Td>
                                            </Tr>
                                        )
                                    })
                                }
                            </Tbody>
                        </Table>
                    </TableContainer>
                </Flex>
            </Container>
        </>
    );
};

export default PRofile;
