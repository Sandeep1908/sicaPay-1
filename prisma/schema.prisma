// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Example {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id           String        @id @unique @default(cuid())
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  email        String        @unique
  name         String
  country      String
  phno         String
  bank_account BankAccount[]
  Balances     Balances?
  SICA         SICA?
  carbon       CARBON?
  logs         Logs[]
  sales        Sales[]
  deposits     Deposits[]
  withdrawals  Withdrawals[]
}

model BankAccount {
  id          String        @id @default(cuid())
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  user        User          @relation(fields: [userId], references: [id])
  userId      String
  bank        String
  account     String
  ifsc        String
  name        String
  address     String?
  withdrawals Withdrawals[]
}

model Balances {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @unique
  inr       Float    @default(0)
  usd       Float    @default(0)
  aed       Float    @default(0)
  sgd       Float    @default(0)
  gbp       Float    @default(0)
  usdt      Float    @default(0)
}

model SICA {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @unique
  staked    Float    @default(0)
  bonus     Float    @default(0)
}

model CARBON {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @unique
  target    Float    @default(0)
  bonus     Float    @default(0)
}

model Logs {
  id              String   @id @default(cuid())
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  user            User     @relation(fields: [userId], references: [id])
  userId          String
  currency        String
  duration        String   @default("1 year")
  SICA            Float    @default(0)
  txn_id          String
  txn_type        String
  current_balance Float
  amount          Float
}

model Sales {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  currency  String
  duration  String   @default("1 year")
  amount    Float
  SICA      Float    @default(0)
  status    String
  ref_id    String   @unique
  txn_type  String   @default("sale")
}

model Deposits {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  currency  String
  status    String
  txn_id    String   @unique
  ref_id    String   @unique
}

model Withdrawals {
  id        String      @id @default(cuid())
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  user      User        @relation(fields: [userId], references: [id])
  userId    String
  currency  String
  amount    String
  sica      String
  ref_id    String      @unique
  bank      BankAccount @relation(fields: [bankAcc], references: [id])
  bankAcc   String
}
